
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xc1f\xa8m\xc0\xbb\xb4kz\x1c\t\xeb ]\xf1\xba'
    
_lr_action_items = {'RPAREN':([1,3,6,11,12,13,14,15,16,],[-7,-8,12,-5,-6,-1,-4,-2,-3,]),'DIVIDE':([1,3,4,6,11,12,13,14,15,16,],[-7,-8,8,8,-5,-6,8,-4,8,-3,]),'NUMBER':([0,2,5,7,8,9,10,],[1,1,1,1,1,1,1,]),'TIMES':([1,3,4,6,11,12,13,14,15,16,],[-7,-8,10,10,-5,-6,10,-4,10,-3,]),'PLUS':([1,3,4,6,11,12,13,14,15,16,],[-7,-8,7,7,-5,-6,-1,-4,-2,-3,]),'LPAREN':([0,2,5,7,8,9,10,],[2,2,2,2,2,2,2,]),'VARIABLE':([0,2,5,7,8,9,10,],[3,3,3,3,3,3,3,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,],[5,-7,5,-8,9,5,9,5,5,5,5,-5,-6,-1,-4,-2,-3,]),'$end':([1,3,4,11,12,13,14,15,16,],[-7,-8,0,-5,-6,-1,-4,-2,-3,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,5,7,8,9,10,],[4,6,11,13,14,15,16,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','/vagrant/mulacula/grammar.py',51),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','/vagrant/mulacula/grammar.py',55),
  ('expression -> expression TIMES expression','expression',3,'p_expression_times','/vagrant/mulacula/grammar.py',59),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_divide','/vagrant/mulacula/grammar.py',63),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','/vagrant/mulacula/grammar.py',67),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','/vagrant/mulacula/grammar.py',74),
  ('expression -> NUMBER','expression',1,'p_expression_number','/vagrant/mulacula/grammar.py',78),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','/vagrant/mulacula/grammar.py',82),
]
